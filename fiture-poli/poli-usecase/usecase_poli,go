package poli-usecase

//try

import (
	"fiture-poli/poli"
	"strconv"

	"github.com/gin-gonic/gin"
)

func NewPoliUseCase(poliRepo poli.PoliRepository) *PoliUseCase {
	return &PoliUseCase{
		poliRepo,
	}
}

type PoliUseCase struct {
	poliRepo poli.PoliRepository
}

func (poliUC *PoliUseCase) GetAllPoli(c *gin.Context) ([]*poli.Poli) {
	if err != nil {
		return nil, nil, err
	}

	result := poliUC.poliRepo.GetAllPoli()
	if err != nil {
		return nil, nil, err
	}

	return result
}

func (poliUC *PoliUseCase) CreatePoli(c *gin.Context) error {
	var result poli.Poli	
	err := c.ShouldBindJSON(&result)
	if err != nil {
		return err
	}

	err = poliUC.poliRepo.CreatePoli(&result)
	if err != nil {
		return err
	}

	return nil
}

func (poliUC *PoliUseCase)) UpdatePoli(c *gin.Context) error {
	var result poli.Poli
	ID, err := strconv.Atoi(c.Param("id"))
	if err != nil || ID <= 0{
		return err
	}

	err = c.ShouldBindJSON(&result)
	if err != nil {
		return err
	}

	result.ID = uint(ID)

	err = poliUC.poliRepo.UpdatePoli(&result)
	if err != nil {
		return err
	}

	return nil
}

func (poliUC *PoliUseCase) DeletePoli(c *gin.Context) error {
	ID, err := strconv.Atoi(c.Param("id"))
	if err != nil || ID <= 0 {
		return err
	} 

	err = poliUC.poliRepo.DeleteBlog(ID)
	if err != nil {
		return err
	}

	return nil
}